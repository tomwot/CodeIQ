E A
B
Fs B
C G
C D Ds F G As
F
D E G A B
D
C D G A
Cs
B
E B
D
invalid
invalid
Cs
Ds
D E Fs G A B
As
C G
invalid
C
Ds F As
Ds
C F G
C Cs Ds F G Gs As
A
Ds Gs As
Cs Ds Fs Gs As
B
invalid
C D F G
Cs Ds E Fs Gs As B
Cs Ds E Fs Gs A B
Cs Ds F Gs As
E Fs A B
B
G
Cs
C Cs Ds F G Gs As
Ds As
C
As
B
Fs
Ds As
Fs
Gs
C Cs Ds F G Gs As
A
G
B
F As
invalid
B
E
C Cs Ds F G Gs As
Ds F Gs As
C F
Cs Ds Gs
invalid
As
C D E F G A B
Ds Gs
F As
Cs D E Fs Gs A B
Cs D E Fs Gs A B
C F G
C
Cs Ds Gs As
Fs
Cs
As
Cs
D E G A
Gs
invalid
Ds As
G
As
Cs G
C Cs Ds F G Gs As
B
As
E
Ds
Ds Gs As
Cs Ds Fs Gs B
Cs
E
Cs Ds E Fs Gs As B
Fs
C
Cs
invalid
C Cs Ds F Fs Gs As
C F As
Cs D E Fs G A B
C F As
E B
C D E F G A B
As
E B
Cs D E Fs G A B
Ds
Ds
E A
F
C D G
A
invalid
Fs B
A
D E Fs G A B
invalid
Fs
invalid
Cs E Fs Gs A B
Cs Ds F Gs As
F
C F
As
F
Cs Ds Gs As
C F
As
D
C F
G
E
F
invalid
E A B
invalid
C F
invalid
Cs Ds F Gs As
invalid
invalid
A
D E A B
Ds F Gs As
C G
D Gs
C D E F G A B
invalid
C
G
E
Cs Ds Gs
B
invalid
invalid
E As
E
C D E Fs G A B
F
B
Cs
D
C Ds F As
Ds Gs As
C F G
D
invalid
D G A
Cs D E Fs G A B
C D G
Cs Gs
E
Gs
C
invalid
As
Cs Gs
invalid
Fs
Cs Fs
C D E Fs G A B
G
A
invalid
G
invalid
Gs
F As
D
C
C D E F G A B
Cs
Fs
D A
invalid
invalid
Cs Ds E Fs Gs A B
E As
As
invalid
C
E A B
ENV: Ruby

sound_list = %w( C Cs D Ds E F Fs G Gs A As B )
sound_lists = sound_list.map.with_index{|s, i| sound_list.values_at(*[0, 2, 4, 5, 7, 9, 11].map{|d|(d+i)%12})}
gets.to_i.times do
  n_sounds = gets.to_i
  sounds = gets.chomp.split.uniq.sort
  ans = sound_lists.select{|sl| sl.sort & sounds == sounds}
  if ans.empty?
    puts 'invalid'
  else
    puts ans.map{|sl| sl.first}.join(' ')
  end
end
